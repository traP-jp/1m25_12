<?xml version="1.0" encoding="UTF-8" standalone="no"?>
<!-- Created with Inkscape (http://www.inkscape.org/) -->

<svg
   width="1025.7598"
   height="1391.499"
   viewBox="0 0 271.39893 368.16744"
   version="1.1"
   id="svg1"
   inkscape:version="1.3.2 (091e20e, 2023-11-25, custom)"
   xml:space="preserve"
   sodipodi:docname="traPavillion.svg"
   inkscape:export-filename="..\出力画像\ロゴ\traPavilion.png"
   inkscape:export-xdpi="96"
   inkscape:export-ydpi="96"
   xmlns:inkscape="http://www.inkscape.org/namespaces/inkscape"
   xmlns:sodipodi="http://sodipodi.sourceforge.net/DTD/sodipodi-0.dtd"
   xmlns="http://www.w3.org/2000/svg"
   xmlns:svg="http://www.w3.org/2000/svg"><sodipodi:namedview
     id="namedview1"
     pagecolor="#ffffff"
     bordercolor="#666666"
     borderopacity="1"
     inkscape:showpageshadow="2"
     inkscape:pageopacity="0.0"
     inkscape:pagecheckerboard="0"
     inkscape:deskcolor="#ffffff"
     inkscape:document-units="px"
     showgrid="true"
     showguides="true"
     inkscape:zoom="0.34228516"
     inkscape:cx="1922.3737"
     inkscape:cy="1053.2154"
     inkscape:window-width="2560"
     inkscape:window-height="1334"
     inkscape:window-x="-11"
     inkscape:window-y="-11"
     inkscape:window-maximized="1"
     inkscape:current-layer="svg1"><inkscape:grid
       id="grid1"
       units="px"
       originx="-5045.6675"
       originy="-3826.9331"
       spacingx="16.933333"
       spacingy="16.933333"
       empcolor="#0099e5"
       empopacity="0.30196078"
       color="#0099e5"
       opacity="0.14902"
       empspacing="4"
       dotted="false"
       gridanglex="30"
       gridanglez="30"
       visible="true" /></sodipodi:namedview><defs
     id="defs1"><style
       id="style1">.cls-1{fill:#005bac;}</style><style
       id="style1-0">.cls-1{fill:#ff7b19;}</style><style
       id="style1-1">.cls-1{fill:#14a39e;}.cls-2{fill:#fff;}</style><style
       id="style1-8">.cls-1{fill:#ff7b19;}</style><style
       id="style1-13">.cls-1{fill:#14a39e;}.cls-2{fill:#fff;}</style></defs><script
     id="mesh_polyfill"
     type="text/javascript">
!function(){const t=&quot;http://www.w3.org/2000/svg&quot;,e=&quot;http://www.w3.org/1999/xlink&quot;,s=&quot;http://www.w3.org/1999/xhtml&quot;,r=2;if(document.createElementNS(t,&quot;meshgradient&quot;).x)return;const n=(t,e,s,r)=&gt;{let n=new x(.5*(e.x+s.x),.5*(e.y+s.y)),o=new x(.5*(t.x+e.x),.5*(t.y+e.y)),i=new x(.5*(s.x+r.x),.5*(s.y+r.y)),a=new x(.5*(n.x+o.x),.5*(n.y+o.y)),h=new x(.5*(n.x+i.x),.5*(n.y+i.y)),l=new x(.5*(a.x+h.x),.5*(a.y+h.y));return[[t,o,a,l],[l,h,i,r]]},o=t=&gt;{let e=t[0].distSquared(t[1]),s=t[2].distSquared(t[3]),r=.25*t[0].distSquared(t[2]),n=.25*t[1].distSquared(t[3]),o=e&gt;s?e:s,i=r&gt;n?r:n;return 18*(o&gt;i?o:i)},i=(t,e)=&gt;Math.sqrt(t.distSquared(e)),a=(t,e)=&gt;t.scale(2/3).add(e.scale(1/3)),h=t=&gt;{let e,s,r,n,o,i,a,h=new g;return t.match(/(\w+\(\s*[^)]+\))+/g).forEach(t=&gt;{let l=t.match(/[\w.-]+/g),d=l.shift();switch(d){case&quot;translate&quot;:2===l.length?e=new g(1,0,0,1,l[0],l[1]):(console.error(&quot;mesh.js: translate does not have 2 arguments!&quot;),e=new g(1,0,0,1,0,0)),h=h.append(e);break;case&quot;scale&quot;:1===l.length?s=new g(l[0],0,0,l[0],0,0):2===l.length?s=new g(l[0],0,0,l[1],0,0):(console.error(&quot;mesh.js: scale does not have 1 or 2 arguments!&quot;),s=new g(1,0,0,1,0,0)),h=h.append(s);break;case&quot;rotate&quot;:if(3===l.length&amp;&amp;(e=new g(1,0,0,1,l[1],l[2]),h=h.append(e)),l[0]){r=l[0]*Math.PI/180;let t=Math.cos(r),e=Math.sin(r);Math.abs(t)&lt;1e-16&amp;&amp;(t=0),Math.abs(e)&lt;1e-16&amp;&amp;(e=0),a=new g(t,e,-e,t,0,0),h=h.append(a)}else console.error(&quot;math.js: No argument to rotate transform!&quot;);3===l.length&amp;&amp;(e=new g(1,0,0,1,-l[1],-l[2]),h=h.append(e));break;case&quot;skewX&quot;:l[0]?(r=l[0]*Math.PI/180,n=Math.tan(r),o=new g(1,0,n,1,0,0),h=h.append(o)):console.error(&quot;math.js: No argument to skewX transform!&quot;);break;case&quot;skewY&quot;:l[0]?(r=l[0]*Math.PI/180,n=Math.tan(r),i=new g(1,n,0,1,0,0),h=h.append(i)):console.error(&quot;math.js: No argument to skewY transform!&quot;);break;case&quot;matrix&quot;:6===l.length?h=h.append(new g(...l)):console.error(&quot;math.js: Incorrect number of arguments for matrix!&quot;);break;default:console.error(&quot;mesh.js: Unhandled transform type: &quot;+d)}}),h},l=t=&gt;{let e=[],s=t.split(/[ ,]+/);for(let t=0,r=s.length-1;t&lt;r;t+=2)e.push(new x(parseFloat(s[t]),parseFloat(s[t+1])));return e},d=(t,e)=&gt;{for(let s in e)t.setAttribute(s,e[s])},c=(t,e,s,r,n)=&gt;{let o,i,a=[0,0,0,0];for(let h=0;h&lt;3;++h)e[h]&lt;t[h]&amp;&amp;e[h]&lt;s[h]||t[h]&lt;e[h]&amp;&amp;s[h]&lt;e[h]?a[h]=0:(a[h]=.5*((e[h]-t[h])/r+(s[h]-e[h])/n),o=Math.abs(3*(e[h]-t[h])/r),i=Math.abs(3*(s[h]-e[h])/n),a[h]&gt;o?a[h]=o:a[h]&gt;i&amp;&amp;(a[h]=i));return a},u=[[1,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0],[0,0,0,0,1,0,0,0,0,0,0,0,0,0,0,0],[-3,3,0,0,-2,-1,0,0,0,0,0,0,0,0,0,0],[2,-2,0,0,1,1,0,0,0,0,0,0,0,0,0,0],[0,0,0,0,0,0,0,0,1,0,0,0,0,0,0,0],[0,0,0,0,0,0,0,0,0,0,0,0,1,0,0,0],[0,0,0,0,0,0,0,0,-3,3,0,0,-2,-1,0,0],[0,0,0,0,0,0,0,0,2,-2,0,0,1,1,0,0],[-3,0,3,0,0,0,0,0,-2,0,-1,0,0,0,0,0],[0,0,0,0,-3,0,3,0,0,0,0,0,-2,0,-1,0],[9,-9,-9,9,6,3,-6,-3,6,-6,3,-3,4,2,2,1],[-6,6,6,-6,-3,-3,3,3,-4,4,-2,2,-2,-2,-1,-1],[2,0,-2,0,0,0,0,0,1,0,1,0,0,0,0,0],[0,0,0,0,2,0,-2,0,0,0,0,0,1,0,1,0],[-6,6,6,-6,-4,-2,4,2,-3,3,-3,3,-2,-1,-2,-1],[4,-4,-4,4,2,2,-2,-2,2,-2,2,-2,1,1,1,1]],f=t=&gt;{let e=[];for(let s=0;s&lt;16;++s){e[s]=0;for(let r=0;r&lt;16;++r)e[s]+=u[s][r]*t[r]}return e},p=(t,e,s)=&gt;{const r=e*e,n=s*s,o=e*e*e,i=s*s*s;return t[0]+t[1]*e+t[2]*r+t[3]*o+t[4]*s+t[5]*s*e+t[6]*s*r+t[7]*s*o+t[8]*n+t[9]*n*e+t[10]*n*r+t[11]*n*o+t[12]*i+t[13]*i*e+t[14]*i*r+t[15]*i*o},y=t=&gt;{let e=[],s=[],r=[];for(let s=0;s&lt;4;++s)e[s]=[],e[s][0]=n(t[0][s],t[1][s],t[2][s],t[3][s]),e[s][1]=[],e[s][1].push(...n(...e[s][0][0])),e[s][1].push(...n(...e[s][0][1])),e[s][2]=[],e[s][2].push(...n(...e[s][1][0])),e[s][2].push(...n(...e[s][1][1])),e[s][2].push(...n(...e[s][1][2])),e[s][2].push(...n(...e[s][1][3]));for(let t=0;t&lt;8;++t){s[t]=[];for(let r=0;r&lt;4;++r)s[t][r]=[],s[t][r][0]=n(e[0][2][t][r],e[1][2][t][r],e[2][2][t][r],e[3][2][t][r]),s[t][r][1]=[],s[t][r][1].push(...n(...s[t][r][0][0])),s[t][r][1].push(...n(...s[t][r][0][1])),s[t][r][2]=[],s[t][r][2].push(...n(...s[t][r][1][0])),s[t][r][2].push(...n(...s[t][r][1][1])),s[t][r][2].push(...n(...s[t][r][1][2])),s[t][r][2].push(...n(...s[t][r][1][3]))}for(let t=0;t&lt;8;++t){r[t]=[];for(let e=0;e&lt;8;++e)r[t][e]=[],r[t][e][0]=s[t][0][2][e],r[t][e][1]=s[t][1][2][e],r[t][e][2]=s[t][2][2][e],r[t][e][3]=s[t][3][2][e]}return r};class x{constructor(t,e){this.x=t||0,this.y=e||0}toString(){return`(x=${this.x}, y=${this.y})`}clone(){return new x(this.x,this.y)}add(t){return new x(this.x+t.x,this.y+t.y)}scale(t){return void 0===t.x?new x(this.x*t,this.y*t):new x(this.x*t.x,this.y*t.y)}distSquared(t){let e=this.x-t.x,s=this.y-t.y;return e*e+s*s}transform(t){let e=this.x*t.a+this.y*t.c+t.e,s=this.x*t.b+this.y*t.d+t.f;return new x(e,s)}}class g{constructor(t,e,s,r,n,o){void 0===t?(this.a=1,this.b=0,this.c=0,this.d=1,this.e=0,this.f=0):(this.a=t,this.b=e,this.c=s,this.d=r,this.e=n,this.f=o)}toString(){return`affine: ${this.a} ${this.c} ${this.e} \n       ${this.b} ${this.d} ${this.f}`}append(t){t instanceof g||console.error(&quot;mesh.js: argument to Affine.append is not affine!&quot;);let e=this.a*t.a+this.c*t.b,s=this.b*t.a+this.d*t.b,r=this.a*t.c+this.c*t.d,n=this.b*t.c+this.d*t.d,o=this.a*t.e+this.c*t.f+this.e,i=this.b*t.e+this.d*t.f+this.f;return new g(e,s,r,n,o,i)}}class w{constructor(t,e){this.nodes=t,this.colors=e}paintCurve(t,e){if(o(this.nodes)&gt;r){const s=n(...this.nodes);let r=[[],[]],o=[[],[]];for(let t=0;t&lt;4;++t)r[0][t]=this.colors[0][t],r[1][t]=(this.colors[0][t]+this.colors[1][t])/2,o[0][t]=r[1][t],o[1][t]=this.colors[1][t];let i=new w(s[0],r),a=new w(s[1],o);i.paintCurve(t,e),a.paintCurve(t,e)}else{let s=Math.round(this.nodes[0].x);if(s&gt;=0&amp;&amp;s&lt;e){let r=4*(~~this.nodes[0].y*e+s);t[r]=Math.round(this.colors[0][0]),t[r+1]=Math.round(this.colors[0][1]),t[r+2]=Math.round(this.colors[0][2]),t[r+3]=Math.round(this.colors[0][3])}}}}class m{constructor(t,e){this.nodes=t,this.colors=e}split(){let t=[[],[],[],[]],e=[[],[],[],[]],s=[[[],[]],[[],[]]],r=[[[],[]],[[],[]]];for(let s=0;s&lt;4;++s){const r=n(this.nodes[0][s],this.nodes[1][s],this.nodes[2][s],this.nodes[3][s]);t[0][s]=r[0][0],t[1][s]=r[0][1],t[2][s]=r[0][2],t[3][s]=r[0][3],e[0][s]=r[1][0],e[1][s]=r[1][1],e[2][s]=r[1][2],e[3][s]=r[1][3]}for(let t=0;t&lt;4;++t)s[0][0][t]=this.colors[0][0][t],s[0][1][t]=this.colors[0][1][t],s[1][0][t]=(this.colors[0][0][t]+this.colors[1][0][t])/2,s[1][1][t]=(this.colors[0][1][t]+this.colors[1][1][t])/2,r[0][0][t]=s[1][0][t],r[0][1][t]=s[1][1][t],r[1][0][t]=this.colors[1][0][t],r[1][1][t]=this.colors[1][1][t];return[new m(t,s),new m(e,r)]}paint(t,e){let s,n=!1;for(let t=0;t&lt;4;++t)if((s=o([this.nodes[0][t],this.nodes[1][t],this.nodes[2][t],this.nodes[3][t]]))&gt;r){n=!0;break}if(n){let s=this.split();s[0].paint(t,e),s[1].paint(t,e)}else{new w([...this.nodes[0]],[...this.colors[0]]).paintCurve(t,e)}}}class b{constructor(t){this.readMesh(t),this.type=t.getAttribute(&quot;type&quot;)||&quot;bilinear&quot;}readMesh(t){let e=[[]],s=[[]],r=Number(t.getAttribute(&quot;x&quot;)),n=Number(t.getAttribute(&quot;y&quot;));e[0][0]=new x(r,n);let o=t.children;for(let t=0,r=o.length;t&lt;r;++t){e[3*t+1]=[],e[3*t+2]=[],e[3*t+3]=[],s[t+1]=[];let r=o[t].children;for(let n=0,o=r.length;n&lt;o;++n){let o=r[n].children;for(let r=0,i=o.length;r&lt;i;++r){let i=r;0!==t&amp;&amp;++i;let h,d=o[r].getAttribute(&quot;path&quot;),c=&quot;l&quot;;null!=d&amp;&amp;(c=(h=d.match(/\s*([lLcC])\s*(.*)/))[1]);let u=l(h[2]);switch(c){case&quot;l&quot;:0===i?(e[3*t][3*n+3]=u[0].add(e[3*t][3*n]),e[3*t][3*n+1]=a(e[3*t][3*n],e[3*t][3*n+3]),e[3*t][3*n+2]=a(e[3*t][3*n+3],e[3*t][3*n])):1===i?(e[3*t+3][3*n+3]=u[0].add(e[3*t][3*n+3]),e[3*t+1][3*n+3]=a(e[3*t][3*n+3],e[3*t+3][3*n+3]),e[3*t+2][3*n+3]=a(e[3*t+3][3*n+3],e[3*t][3*n+3])):2===i?(0===n&amp;&amp;(e[3*t+3][3*n+0]=u[0].add(e[3*t+3][3*n+3])),e[3*t+3][3*n+1]=a(e[3*t+3][3*n],e[3*t+3][3*n+3]),e[3*t+3][3*n+2]=a(e[3*t+3][3*n+3],e[3*t+3][3*n])):(e[3*t+1][3*n]=a(e[3*t][3*n],e[3*t+3][3*n]),e[3*t+2][3*n]=a(e[3*t+3][3*n],e[3*t][3*n]));break;case&quot;L&quot;:0===i?(e[3*t][3*n+3]=u[0],e[3*t][3*n+1]=a(e[3*t][3*n],e[3*t][3*n+3]),e[3*t][3*n+2]=a(e[3*t][3*n+3],e[3*t][3*n])):1===i?(e[3*t+3][3*n+3]=u[0],e[3*t+1][3*n+3]=a(e[3*t][3*n+3],e[3*t+3][3*n+3]),e[3*t+2][3*n+3]=a(e[3*t+3][3*n+3],e[3*t][3*n+3])):2===i?(0===n&amp;&amp;(e[3*t+3][3*n+0]=u[0]),e[3*t+3][3*n+1]=a(e[3*t+3][3*n],e[3*t+3][3*n+3]),e[3*t+3][3*n+2]=a(e[3*t+3][3*n+3],e[3*t+3][3*n])):(e[3*t+1][3*n]=a(e[3*t][3*n],e[3*t+3][3*n]),e[3*t+2][3*n]=a(e[3*t+3][3*n],e[3*t][3*n]));break;case&quot;c&quot;:0===i?(e[3*t][3*n+1]=u[0].add(e[3*t][3*n]),e[3*t][3*n+2]=u[1].add(e[3*t][3*n]),e[3*t][3*n+3]=u[2].add(e[3*t][3*n])):1===i?(e[3*t+1][3*n+3]=u[0].add(e[3*t][3*n+3]),e[3*t+2][3*n+3]=u[1].add(e[3*t][3*n+3]),e[3*t+3][3*n+3]=u[2].add(e[3*t][3*n+3])):2===i?(e[3*t+3][3*n+2]=u[0].add(e[3*t+3][3*n+3]),e[3*t+3][3*n+1]=u[1].add(e[3*t+3][3*n+3]),0===n&amp;&amp;(e[3*t+3][3*n+0]=u[2].add(e[3*t+3][3*n+3]))):(e[3*t+2][3*n]=u[0].add(e[3*t+3][3*n]),e[3*t+1][3*n]=u[1].add(e[3*t+3][3*n]));break;case&quot;C&quot;:0===i?(e[3*t][3*n+1]=u[0],e[3*t][3*n+2]=u[1],e[3*t][3*n+3]=u[2]):1===i?(e[3*t+1][3*n+3]=u[0],e[3*t+2][3*n+3]=u[1],e[3*t+3][3*n+3]=u[2]):2===i?(e[3*t+3][3*n+2]=u[0],e[3*t+3][3*n+1]=u[1],0===n&amp;&amp;(e[3*t+3][3*n+0]=u[2])):(e[3*t+2][3*n]=u[0],e[3*t+1][3*n]=u[1]);break;default:console.error(&quot;mesh.js: &quot;+c+&quot; invalid path type.&quot;)}if(0===t&amp;&amp;0===n||r&gt;0){let e=window.getComputedStyle(o[r]).stopColor.match(/^rgb\s*\(\s*(\d+)\s*,\s*(\d+)\s*,\s*(\d+)\s*\)$/i),a=window.getComputedStyle(o[r]).stopOpacity,h=255;a&amp;&amp;(h=Math.floor(255*a)),e&amp;&amp;(0===i?(s[t][n]=[],s[t][n][0]=Math.floor(e[1]),s[t][n][1]=Math.floor(e[2]),s[t][n][2]=Math.floor(e[3]),s[t][n][3]=h):1===i?(s[t][n+1]=[],s[t][n+1][0]=Math.floor(e[1]),s[t][n+1][1]=Math.floor(e[2]),s[t][n+1][2]=Math.floor(e[3]),s[t][n+1][3]=h):2===i?(s[t+1][n+1]=[],s[t+1][n+1][0]=Math.floor(e[1]),s[t+1][n+1][1]=Math.floor(e[2]),s[t+1][n+1][2]=Math.floor(e[3]),s[t+1][n+1][3]=h):3===i&amp;&amp;(s[t+1][n]=[],s[t+1][n][0]=Math.floor(e[1]),s[t+1][n][1]=Math.floor(e[2]),s[t+1][n][2]=Math.floor(e[3]),s[t+1][n][3]=h))}}e[3*t+1][3*n+1]=new x,e[3*t+1][3*n+2]=new x,e[3*t+2][3*n+1]=new x,e[3*t+2][3*n+2]=new x,e[3*t+1][3*n+1].x=(-4*e[3*t][3*n].x+6*(e[3*t][3*n+1].x+e[3*t+1][3*n].x)+-2*(e[3*t][3*n+3].x+e[3*t+3][3*n].x)+3*(e[3*t+3][3*n+1].x+e[3*t+1][3*n+3].x)+-1*e[3*t+3][3*n+3].x)/9,e[3*t+1][3*n+2].x=(-4*e[3*t][3*n+3].x+6*(e[3*t][3*n+2].x+e[3*t+1][3*n+3].x)+-2*(e[3*t][3*n].x+e[3*t+3][3*n+3].x)+3*(e[3*t+3][3*n+2].x+e[3*t+1][3*n].x)+-1*e[3*t+3][3*n].x)/9,e[3*t+2][3*n+1].x=(-4*e[3*t+3][3*n].x+6*(e[3*t+3][3*n+1].x+e[3*t+2][3*n].x)+-2*(e[3*t+3][3*n+3].x+e[3*t][3*n].x)+3*(e[3*t][3*n+1].x+e[3*t+2][3*n+3].x)+-1*e[3*t][3*n+3].x)/9,e[3*t+2][3*n+2].x=(-4*e[3*t+3][3*n+3].x+6*(e[3*t+3][3*n+2].x+e[3*t+2][3*n+3].x)+-2*(e[3*t+3][3*n].x+e[3*t][3*n+3].x)+3*(e[3*t][3*n+2].x+e[3*t+2][3*n].x)+-1*e[3*t][3*n].x)/9,e[3*t+1][3*n+1].y=(-4*e[3*t][3*n].y+6*(e[3*t][3*n+1].y+e[3*t+1][3*n].y)+-2*(e[3*t][3*n+3].y+e[3*t+3][3*n].y)+3*(e[3*t+3][3*n+1].y+e[3*t+1][3*n+3].y)+-1*e[3*t+3][3*n+3].y)/9,e[3*t+1][3*n+2].y=(-4*e[3*t][3*n+3].y+6*(e[3*t][3*n+2].y+e[3*t+1][3*n+3].y)+-2*(e[3*t][3*n].y+e[3*t+3][3*n+3].y)+3*(e[3*t+3][3*n+2].y+e[3*t+1][3*n].y)+-1*e[3*t+3][3*n].y)/9,e[3*t+2][3*n+1].y=(-4*e[3*t+3][3*n].y+6*(e[3*t+3][3*n+1].y+e[3*t+2][3*n].y)+-2*(e[3*t+3][3*n+3].y+e[3*t][3*n].y)+3*(e[3*t][3*n+1].y+e[3*t+2][3*n+3].y)+-1*e[3*t][3*n+3].y)/9,e[3*t+2][3*n+2].y=(-4*e[3*t+3][3*n+3].y+6*(e[3*t+3][3*n+2].y+e[3*t+2][3*n+3].y)+-2*(e[3*t+3][3*n].y+e[3*t][3*n+3].y)+3*(e[3*t][3*n+2].y+e[3*t+2][3*n].y)+-1*e[3*t][3*n].y)/9}}this.nodes=e,this.colors=s}paintMesh(t,e){let s=(this.nodes.length-1)/3,r=(this.nodes[0].length-1)/3;if(&quot;bilinear&quot;===this.type||s&lt;2||r&lt;2){let n;for(let o=0;o&lt;s;++o)for(let s=0;s&lt;r;++s){let r=[];for(let t=3*o,e=3*o+4;t&lt;e;++t)r.push(this.nodes[t].slice(3*s,3*s+4));let i=[];i.push(this.colors[o].slice(s,s+2)),i.push(this.colors[o+1].slice(s,s+2)),(n=new m(r,i)).paint(t,e)}}else{let n,o,a,h,l,d,u;const x=s,g=r;s++,r++;let w=new Array(s);for(let t=0;t&lt;s;++t){w[t]=new Array(r);for(let e=0;e&lt;r;++e)w[t][e]=[],w[t][e][0]=this.nodes[3*t][3*e],w[t][e][1]=this.colors[t][e]}for(let t=0;t&lt;s;++t)for(let e=0;e&lt;r;++e)0!==t&amp;&amp;t!==x&amp;&amp;(n=i(w[t-1][e][0],w[t][e][0]),o=i(w[t+1][e][0],w[t][e][0]),w[t][e][2]=c(w[t-1][e][1],w[t][e][1],w[t+1][e][1],n,o)),0!==e&amp;&amp;e!==g&amp;&amp;(n=i(w[t][e-1][0],w[t][e][0]),o=i(w[t][e+1][0],w[t][e][0]),w[t][e][3]=c(w[t][e-1][1],w[t][e][1],w[t][e+1][1],n,o));for(let t=0;t&lt;r;++t){w[0][t][2]=[],w[x][t][2]=[];for(let e=0;e&lt;4;++e)n=i(w[1][t][0],w[0][t][0]),o=i(w[x][t][0],w[x-1][t][0]),w[0][t][2][e]=n&gt;0?2*(w[1][t][1][e]-w[0][t][1][e])/n-w[1][t][2][e]:0,w[x][t][2][e]=o&gt;0?2*(w[x][t][1][e]-w[x-1][t][1][e])/o-w[x-1][t][2][e]:0}for(let t=0;t&lt;s;++t){w[t][0][3]=[],w[t][g][3]=[];for(let e=0;e&lt;4;++e)n=i(w[t][1][0],w[t][0][0]),o=i(w[t][g][0],w[t][g-1][0]),w[t][0][3][e]=n&gt;0?2*(w[t][1][1][e]-w[t][0][1][e])/n-w[t][1][3][e]:0,w[t][g][3][e]=o&gt;0?2*(w[t][g][1][e]-w[t][g-1][1][e])/o-w[t][g-1][3][e]:0}for(let s=0;s&lt;x;++s)for(let r=0;r&lt;g;++r){let n=i(w[s][r][0],w[s+1][r][0]),o=i(w[s][r+1][0],w[s+1][r+1][0]),c=i(w[s][r][0],w[s][r+1][0]),x=i(w[s+1][r][0],w[s+1][r+1][0]),g=[[],[],[],[]];for(let t=0;t&lt;4;++t){(d=[])[0]=w[s][r][1][t],d[1]=w[s+1][r][1][t],d[2]=w[s][r+1][1][t],d[3]=w[s+1][r+1][1][t],d[4]=w[s][r][2][t]*n,d[5]=w[s+1][r][2][t]*n,d[6]=w[s][r+1][2][t]*o,d[7]=w[s+1][r+1][2][t]*o,d[8]=w[s][r][3][t]*c,d[9]=w[s+1][r][3][t]*x,d[10]=w[s][r+1][3][t]*c,d[11]=w[s+1][r+1][3][t]*x,d[12]=0,d[13]=0,d[14]=0,d[15]=0,u=f(d);for(let e=0;e&lt;9;++e){g[t][e]=[];for(let s=0;s&lt;9;++s)g[t][e][s]=p(u,e/8,s/8),g[t][e][s]&gt;255?g[t][e][s]=255:g[t][e][s]&lt;0&amp;&amp;(g[t][e][s]=0)}}h=[];for(let t=3*s,e=3*s+4;t&lt;e;++t)h.push(this.nodes[t].slice(3*r,3*r+4));l=y(h);for(let s=0;s&lt;8;++s)for(let r=0;r&lt;8;++r)(a=new m(l[s][r],[[[g[0][s][r],g[1][s][r],g[2][s][r],g[3][s][r]],[g[0][s][r+1],g[1][s][r+1],g[2][s][r+1],g[3][s][r+1]]],[[g[0][s+1][r],g[1][s+1][r],g[2][s+1][r],g[3][s+1][r]],[g[0][s+1][r+1],g[1][s+1][r+1],g[2][s+1][r+1],g[3][s+1][r+1]]]])).paint(t,e)}}}transform(t){if(t instanceof x)for(let e=0,s=this.nodes.length;e&lt;s;++e)for(let s=0,r=this.nodes[0].length;s&lt;r;++s)this.nodes[e][s]=this.nodes[e][s].add(t);else if(t instanceof g)for(let e=0,s=this.nodes.length;e&lt;s;++e)for(let s=0,r=this.nodes[0].length;s&lt;r;++s)this.nodes[e][s]=this.nodes[e][s].transform(t)}scale(t){for(let e=0,s=this.nodes.length;e&lt;s;++e)for(let s=0,r=this.nodes[0].length;s&lt;r;++s)this.nodes[e][s]=this.nodes[e][s].scale(t)}}document.querySelectorAll(&quot;rect,circle,ellipse,path,text&quot;).forEach((r,n)=&gt;{let o=r.getAttribute(&quot;id&quot;);o||(o=&quot;patchjs_shape&quot;+n,r.setAttribute(&quot;id&quot;,o));const i=r.style.fill.match(/^url\(\s*&quot;?\s*#([^\s&quot;]+)&quot;?\s*\)/),a=r.style.stroke.match(/^url\(\s*&quot;?\s*#([^\s&quot;]+)&quot;?\s*\)/);if(i&amp;&amp;i[1]){const a=document.getElementById(i[1]);if(a&amp;&amp;&quot;meshgradient&quot;===a.nodeName){const i=r.getBBox();let l=document.createElementNS(s,&quot;canvas&quot;);d(l,{width:i.width,height:i.height});const c=l.getContext(&quot;2d&quot;);let u=c.createImageData(i.width,i.height);const f=new b(a);&quot;objectBoundingBox&quot;===a.getAttribute(&quot;gradientUnits&quot;)&amp;&amp;f.scale(new x(i.width,i.height));const p=a.getAttribute(&quot;gradientTransform&quot;);null!=p&amp;&amp;f.transform(h(p)),&quot;userSpaceOnUse&quot;===a.getAttribute(&quot;gradientUnits&quot;)&amp;&amp;f.transform(new x(-i.x,-i.y)),f.paintMesh(u.data,l.width),c.putImageData(u,0,0);const y=document.createElementNS(t,&quot;image&quot;);d(y,{width:i.width,height:i.height,x:i.x,y:i.y});let g=l.toDataURL();y.setAttributeNS(e,&quot;xlink:href&quot;,g),r.parentNode.insertBefore(y,r),r.style.fill=&quot;none&quot;;const w=document.createElementNS(t,&quot;use&quot;);w.setAttributeNS(e,&quot;xlink:href&quot;,&quot;#&quot;+o);const m=&quot;patchjs_clip&quot;+n,M=document.createElementNS(t,&quot;clipPath&quot;);M.setAttribute(&quot;id&quot;,m),M.appendChild(w),r.parentElement.insertBefore(M,r),y.setAttribute(&quot;clip-path&quot;,&quot;url(#&quot;+m+&quot;)&quot;),u=null,l=null,g=null}}if(a&amp;&amp;a[1]){const o=document.getElementById(a[1]);if(o&amp;&amp;&quot;meshgradient&quot;===o.nodeName){const i=parseFloat(r.style.strokeWidth.slice(0,-2))*(parseFloat(r.style.strokeMiterlimit)||parseFloat(r.getAttribute(&quot;stroke-miterlimit&quot;))||1),a=r.getBBox(),l=Math.trunc(a.width+i),c=Math.trunc(a.height+i),u=Math.trunc(a.x-i/2),f=Math.trunc(a.y-i/2);let p=document.createElementNS(s,&quot;canvas&quot;);d(p,{width:l,height:c});const y=p.getContext(&quot;2d&quot;);let g=y.createImageData(l,c);const w=new b(o);&quot;objectBoundingBox&quot;===o.getAttribute(&quot;gradientUnits&quot;)&amp;&amp;w.scale(new x(l,c));const m=o.getAttribute(&quot;gradientTransform&quot;);null!=m&amp;&amp;w.transform(h(m)),&quot;userSpaceOnUse&quot;===o.getAttribute(&quot;gradientUnits&quot;)&amp;&amp;w.transform(new x(-u,-f)),w.paintMesh(g.data,p.width),y.putImageData(g,0,0);const M=document.createElementNS(t,&quot;image&quot;);d(M,{width:l,height:c,x:0,y:0});let S=p.toDataURL();M.setAttributeNS(e,&quot;xlink:href&quot;,S);const k=&quot;pattern_clip&quot;+n,A=document.createElementNS(t,&quot;pattern&quot;);d(A,{id:k,patternUnits:&quot;userSpaceOnUse&quot;,width:l,height:c,x:u,y:f}),A.appendChild(M),o.parentNode.appendChild(A),r.style.stroke=&quot;url(#&quot;+k+&quot;)&quot;,g=null,p=null,S=null}}})}();
</script><g
     id="g91506"
     transform="translate(-5045.6675,-3826.9331)"><path
       id="path91322"
       style="fill:#1ab3ff;fill-opacity:1;stroke:none;stroke-width:0.264583"
       d="m 5103.6972,3851.5739 a 135.46666,135.46666 0 0 0 -58.0295,110.5229 135.46666,135.46666 0 0 0 18.1493,67.7334 135.46666,135.46666 0 0 1 30.1144,-35.9136 93.133331,93.133331 0 0 1 -5.9304,-31.8203 93.133331,93.133331 0 0 1 51.185,-82.6725 124.88333,124.88333 0 0 0 -35.4888,-27.8499 z m 66.3045,122.4235 c -26.293,2.4114 -51.1453,13.0942 -70.9869,30.5139 -11.3348,10.0809 -20.7383,22.1427 -27.7497,35.5942 -7.4604,14.3649 -12.057,30.0434 -13.5341,46.1626 16.1193,-1.4768 31.798,-6.0733 46.1631,-13.5336 13.4514,-7.0115 25.513,-16.4152 35.5937,-27.7502 17.4197,-19.8416 28.1025,-44.6939 30.5139,-70.9869 z m 94.2707,30.3501 a 93.133331,93.133331 0 0 1 -82.6724,51.185 93.133331,93.133331 0 0 1 -31.8198,-5.9299 135.46666,135.46666 0 0 1 -35.9136,30.1144 135.46666,135.46666 0 0 0 67.7334,18.1493 135.46666,135.46666 0 0 0 110.5229,-58.03 124.88333,124.88333 0 0 0 -27.8505,-35.4888 z" /><path
       id="path91438"
       style="fill:#1ab3ff;fill-opacity:1;stroke:none;stroke-width:0.264583;stroke-linecap:round;stroke-linejoin:round;stroke-dashoffset:8"
       d="m 5181.5999,3826.9331 a 135.46666,135.46666 0 0 0 -67.7835,18.1839 135.46666,135.46666 0 0 1 67.7835,117.2828 135.46666,135.46666 0 0 1 117.2827,67.7829 135.46666,135.46666 0 0 0 18.1839,-67.7829 135.46666,135.46666 0 0 0 -16.0326,-63.8639 h -13.6069 c -0.6576,0 -1.1906,0.5332 -1.1906,1.1907 v 5.9107 c 0,0.6576 -0.5332,1.1906 -1.1907,1.1906 h -16.3948 c -0.4441,0 -0.8513,-0.2474 -1.0563,-0.6413 l -7.2817,-13.9986 c -0.2049,-0.3941 -0.6121,-0.6413 -1.0563,-0.6413 h -32.2626 c -1.3817,2.113 -3.7687,3.5094 -6.4818,3.5094 -4.2741,0 -7.7391,-3.465 -7.7391,-7.7391 0,-0.4609 0.04,-0.9126 0.1174,-1.3513 l -8.0915,-18.2868 c -0.1453,-0.3291 -0.135,-0.7071 0.033,-1.0252 1.1497,-2.1779 2.4604,-4.2929 3.9311,-6.3283 0.062,-0.085 0.1317,-0.1592 0.2067,-0.2212 1.5741,-2.1309 3.3259,-4.1717 5.256,-6.1014 1.628,-1.628 3.3346,-3.1296 5.1077,-4.5042 0.2245,-4.073 3.5985,-7.3065 7.7271,-7.3065 1.1712,0 2.2821,0.2604 3.2768,0.7261 2.9108,-1.2935 5.9166,-2.2974 8.9721,-3.0464 a 135.46666,135.46666 0 0 0 -57.7096,-12.9387 z m 45.5207,17.9973 c -2.7946,0 -5.0602,2.2656 -5.0602,5.0602 0,2.7947 2.2656,5.0601 5.0602,5.0601 2.7946,0 5.0601,-2.2654 5.0601,-5.0601 0,-2.7946 -2.2655,-5.0602 -5.0601,-5.0602 z m 24.06,4.1052 c -5.8115,0.1255 -11.6026,1.426 -16.986,3.9016 -0.8533,2.0226 -2.5417,3.6064 -4.6333,4.3201 v 9.9379 h 5e-4 c 0,0.1577 0.063,0.3091 0.1741,0.4207 0.1115,0.1121 0.2629,0.1741 0.4207,0.1741 v 5e-4 h 4.6529 c -0.01,-0.1183 -0.01,-0.2371 -0.01,-0.357 0,-3.6167 2.9321,-6.5485 6.5484,-6.5485 2.5447,0 4.7503,1.4517 5.8343,3.5719 h 14.287 v -5e-4 c 0.1578,0 0.3091,-0.063 0.4206,-0.1742 0.1112,-0.1115 0.1742,-0.2628 0.1742,-0.4206 h 5e-4 v -10.4387 a 135.46666,135.46666 0 0 0 -6.0565,-4.194 c -0.7783,-0.071 -1.5562,-0.147 -2.3368,-0.1752 -0.8299,-0.03 -1.6606,-0.036 -2.4908,-0.018 z m 13.2659,6.2224 v 8.6036 c 0,0.7894 -0.3136,1.5465 -0.8718,2.1048 -0.5583,0.5582 -1.3154,0.8717 -2.1048,0.8717 h -6.4895 c 0.04,0.1944 0.061,0.3939 0.061,0.5954 v 5.3573 h 5e-4 c 0,0.1578 0.063,0.3086 0.1746,0.4201 0.1116,0.1116 0.2618,0.1746 0.4196,0.1746 h 6.5867 c -0.1026,-0.4599 -0.1566,-0.9381 -0.1566,-1.4288 0,-3.6167 2.9318,-6.5484 6.5485,-6.5484 2.2988,0 4.3213,1.1845 5.4896,2.9765 h 5.0167 a 135.46666,135.46666 0 0 0 -14.674,-13.1268 z m -38.1124,2.3781 c -1.5783,1.1908 -3.093,2.5055 -4.531,3.9435 -2.6693,2.669 -4.9135,5.6035 -6.7314,8.7172 l 4.1538,9.3871 c 0.4186,-0.069 0.8487,-0.1065 1.2872,-0.1065 0.4464,0 0.8838,0.039 1.3095,0.1106 v -8.9214 c 0,-0.7893 0.3136,-1.5461 0.8718,-2.1043 0.5583,-0.5582 1.3154,-0.8718 2.1048,-0.8718 h 2.4412 c -0.04,-0.1946 -0.06,-0.3939 -0.06,-0.5953 v -9.526 c -0.04,7e-4 -0.079,0 -0.1188,0 v 0 c -0.2453,0 -0.4878,-0.012 -0.7271,-0.034 z m 15.0146,5.6302 c -2.3015,0 -4.1672,1.8657 -4.1672,4.1672 0,2.3015 1.8657,4.1671 4.1672,4.1671 2.3014,0 4.1672,-1.8656 4.1672,-4.1671 0,-2.3015 -1.8658,-4.1672 -4.1672,-4.1672 z m 6.5215,3.5744 c 0.017,0.1951 0.027,0.3925 0.027,0.5922 v 0 c 0,3.6152 -2.9329,6.5449 -6.5484,6.5449 -2.6389,0 -4.9133,-1.5606 -5.9501,-3.8096 h -10.5993 v 5e-4 c -0.1578,0 -0.3092,0.063 -0.4207,0.1741 -0.1121,0.1116 -0.1741,0.263 -0.1741,0.4207 h -5e-4 v 9.7456 0 c 1.1738,0.6381 2.1639,1.5712 2.8711,2.6996 h 37.2417 c 0.4441,0 0.8511,0.2472 1.0562,0.6413 l 7.2812,13.9987 c 0.2049,0.394 0.6127,0.6407 1.0568,0.6407 h 3.4773 c 0.6576,0 1.1907,-0.533 1.1907,-1.1906 v 0 -5.9076 c 0,-0.6576 0.533,-1.1907 1.1906,-1.1907 h 3.962 c -0.023,-0.2441 -0.035,-0.4913 -0.035,-0.7415 v 0 0 c 0,-0.2177 0.01,-0.4333 0.027,-0.6465 0.053,-0.6425 0.1854,-1.2627 0.3861,-1.851 v 0 c 4e-4,0 7e-4,0 0,0 h -10.6521 c -0.7462,-0.03 -1.4558,-0.3391 -1.9859,-0.8692 -0.5582,-0.5582 -0.8718,-1.3155 -0.8718,-2.1048 v -5.7232 c -0.5677,0.1604 -1.1668,0.2465 -1.7859,0.2465 -2.1954,0 -4.1386,-1.0803 -5.3268,-2.7383 h -7.6507 c -0.7894,0 -1.5465,-0.3136 -2.1048,-0.8718 -0.5581,-0.5581 -0.8717,-1.3144 -0.8718,-2.1037 v -5.3579 0 c 0,-0.1578 -0.063,-0.3091 -0.1742,-0.4206 -0.1116,-0.1112 -0.2624,-0.1742 -0.4201,-0.1742 v -5e-4 z m 20.7435,0.9498 c -2.3015,0 -4.1672,1.8657 -4.1672,4.1672 0,2.3014 1.8657,4.1672 4.1672,4.1672 2.3014,0 4.1672,-1.8658 4.1672,-4.1672 0,-2.3015 -1.8658,-4.1672 -4.1672,-4.1672 z m 6.4404,2.9766 c 0.071,0.3862 0.108,0.784 0.108,1.1906 0,2.0334 -0.9268,3.8505 -2.3812,5.0514 v 6.9742 h 5e-4 c 0,0.1577 0.063,0.3086 0.1741,0.4202 0.028,0.028 0.058,0.053 0.091,0.074 0.065,0.043 0.1371,0.073 0.2134,0.088 0.038,0.01 0.077,0.011 0.1168,0.011 v 5e-4 h 11.854 c 0.089,-0.1089 0.18,-0.2154 0.2744,-0.3193 1.2504,-1.3769 2.991,-2.2988 4.9455,-2.496 a 135.46666,135.46666 0 0 0 -9.1189,-10.9957 z m -74.0182,7.615 c 0.4454,-0.033 0.9145,0.1946 1.1384,0.6977 l 7.1241,16.0005 c 0.055,0.1237 0.089,0.2562 0.1,0.3912 0.4487,5.3803 1.9097,10.6916 4.3832,15.6254 l 13.3805,-13.38 c 0.4334,-0.4334 1.1746,-0.1267 1.1746,0.4863 v 17.3105 h 17.3106 c 0.6129,0 0.9196,0.7413 0.4863,1.1746 l -13.4297,13.4297 c 16.0908,8.1725 36.2629,5.5321 49.7164,-7.9215 4.3613,-4.3613 7.5861,-9.4288 9.6748,-14.8342 0.1804,-0.4668 0.6255,-0.7803 1.126,-0.7803 h 8.8486 c 0.7903,0 1.3613,0.7559 1.1229,1.5094 -2.5085,7.931 -6.9074,15.3936 -13.1955,21.6819 -17.6724,17.6726 -44.6187,20.4189 -65.1733,8.2383 l -3.1533,3.1528 c -0.1023,0.1027 -0.2348,0.1697 -0.3778,0.1927 l -21.4441,3.4396 c -0.4626,0.074 -0.8621,-0.3256 -0.7881,-0.7881 l 3.4391,-21.4447 c 0.023,-0.143 0.09,-0.2748 0.1927,-0.3772 l 3.19,-3.19 c -7.1169,-12.118 -9.0641,-26.434 -5.8425,-39.7547 h -6e-4 c 0.1295,-0.5352 0.5514,-0.8269 0.9969,-0.8599 z m 19.5363,3.9342 c -2.7947,0 -5.0602,2.2655 -5.0602,5.0601 0,2.7947 2.2655,5.0602 5.0602,5.0602 2.7946,0 5.0601,-2.2655 5.0601,-5.0602 0,-2.7946 -2.2655,-5.0601 -5.0601,-5.0601 z m 70.6039,2.143 c -2.7947,0 -5.0601,2.2654 -5.0601,5.0601 0,2.7946 2.2654,5.0602 5.0601,5.0602 2.5745,0 4.6768,-1.93 4.9956,-4.4178 a 135.46666,135.46666 0 0 0 -3.6691,-5.5046 c -0.4254,-0.1161 -0.8643,-0.1979 -1.3265,-0.1979 z" /><path
       d="m 5078.6923,4174.8599 v -64.2938 h 11.9063 v 32.1469 l 8.3343,-8.3344 h 11.9063 l -14.2875,14.2875 h 2.3812 l 13.0969,26.1938 h -11.9062 l -9.525,-19.05 v 19.05 z m 49.3448,0 q -10.7156,0 -10.7156,-11.9063 v -2.3812 q 0,-11.9063 10.7156,-11.9063 h 10.7156 v -2.3812 q 0,-5.9532 -7.1437,-5.9532 h -13.0969 v -5.9531 h 21.4313 q 10.7156,0 10.7156,11.9063 v 28.575 z m 5.9531,-20.2407 q -4.7625,0 -4.7625,5.9532 v 2.3812 q 0,5.9531 4.7625,5.9531 h 4.7625 v -14.2875 z m 32.6761,-20.2406 h 22.6218 v 19.05 29.7656 q 0,11.9063 -10.7156,11.9063 h -21.4312 v -5.9531 h 13.0968 q 7.1438,0 7.1438,-5.9532 v -8.3343 h -10.7156 q -10.7157,0 -10.7157,-11.9063 v -16.6687 q 0,-11.9063 10.7157,-11.9063 z m 5.9531,34.5281 h 4.7625 v -15.4781 -13.0969 h -4.7625 q -4.7625,0 -4.7625,5.9532 v 16.6687 q 0,5.9531 4.7625,5.9531 z m 32.676,-34.5281 h 22.6219 v 19.05 29.7656 q 0,11.9063 -10.7156,11.9063 h -21.4313 v -5.9531 h 13.0969 q 7.1438,0 7.1438,-5.9532 v -8.3343 h -10.7157 q -10.7156,0 -10.7156,-11.9063 v -16.6687 q 0,-11.9063 10.7156,-11.9063 z m 5.9532,34.5281 h 4.7625 v -15.4781 -13.0969 h -4.7625 q -4.7625,0 -4.7625,5.9532 v 16.6687 q 0,5.9531 4.7625,5.9531 z m 17.9604,-52.3875 v -5.9531 h 16.6687 v 64.2938 h -11.9062 v -58.3407 z m 32.676,58.3407 q -10.7156,0 -10.7156,-11.9063 v -16.6687 q 0,-11.9063 10.7156,-11.9063 h 11.9063 q 10.7156,0 10.7156,11.9063 v 10.7156 h -21.4313 v 5.9531 q 0,5.9531 4.7625,5.9531 h 15.4782 v 5.9532 z m 1.1906,-28.575 v 4.7625 h 9.525 v -4.7625 q 0,-5.9532 -4.7625,-5.9532 -4.7625,0 -4.7625,5.9532 z"
       id="text91462"
       style="font-size:101.6px;line-height:0;font-family:GN-Kin-iro_SansSerif;-inkscape-font-specification:'GN-Kin-iro_SansSerif, Normal';text-align:center;letter-spacing:0.529167px;text-anchor:middle;fill:#1ab3ff;stroke-width:0.132291;stroke-linecap:round;stroke-linejoin:round;stroke-dashoffset:8"
       aria-label="kaggle" /></g></svg>
