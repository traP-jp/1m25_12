<?xml version="1.0" encoding="UTF-8" standalone="no"?>
<!-- Created with Inkscape (http://www.inkscape.org/) -->

<svg
   width="1173.9414"
   height="1391.5"
   viewBox="0 0 310.60532 368.1677"
   version="1.1"
   id="svg1"
   inkscape:version="1.3.2 (091e20e, 2023-11-25, custom)"
   xml:space="preserve"
   sodipodi:docname="traPavillion.svg"
   inkscape:export-filename="..\出力画像\ロゴ\traPavilion.png"
   inkscape:export-xdpi="96"
   inkscape:export-ydpi="96"
   xmlns:inkscape="http://www.inkscape.org/namespaces/inkscape"
   xmlns:sodipodi="http://sodipodi.sourceforge.net/DTD/sodipodi-0.dtd"
   xmlns="http://www.w3.org/2000/svg"
   xmlns:svg="http://www.w3.org/2000/svg"><sodipodi:namedview
     id="namedview1"
     pagecolor="#ffffff"
     bordercolor="#666666"
     borderopacity="1"
     inkscape:showpageshadow="2"
     inkscape:pageopacity="0.0"
     inkscape:pagecheckerboard="0"
     inkscape:deskcolor="#ffffff"
     inkscape:document-units="px"
     showgrid="true"
     showguides="true"
     inkscape:zoom="0.34228516"
     inkscape:cx="1922.3737"
     inkscape:cy="1053.2154"
     inkscape:window-width="2560"
     inkscape:window-height="1334"
     inkscape:window-x="-11"
     inkscape:window-y="-11"
     inkscape:window-maximized="1"
     inkscape:current-layer="svg1"><inkscape:grid
       id="grid1"
       units="px"
       originx="-3671.366"
       originy="-3826.9331"
       spacingx="16.933333"
       spacingy="16.933333"
       empcolor="#0099e5"
       empopacity="0.30196078"
       color="#0099e5"
       opacity="0.14902"
       empspacing="4"
       dotted="false"
       gridanglex="30"
       gridanglez="30"
       visible="true" /></sodipodi:namedview><defs
     id="defs1"><style
       id="style1">.cls-1{fill:#005bac;}</style><style
       id="style1-0">.cls-1{fill:#ff7b19;}</style><style
       id="style1-1">.cls-1{fill:#14a39e;}.cls-2{fill:#fff;}</style><style
       id="style1-8">.cls-1{fill:#ff7b19;}</style><style
       id="style1-13">.cls-1{fill:#14a39e;}.cls-2{fill:#fff;}</style></defs><script
     id="mesh_polyfill"
     type="text/javascript">
!function(){const t=&quot;http://www.w3.org/2000/svg&quot;,e=&quot;http://www.w3.org/1999/xlink&quot;,s=&quot;http://www.w3.org/1999/xhtml&quot;,r=2;if(document.createElementNS(t,&quot;meshgradient&quot;).x)return;const n=(t,e,s,r)=&gt;{let n=new x(.5*(e.x+s.x),.5*(e.y+s.y)),o=new x(.5*(t.x+e.x),.5*(t.y+e.y)),i=new x(.5*(s.x+r.x),.5*(s.y+r.y)),a=new x(.5*(n.x+o.x),.5*(n.y+o.y)),h=new x(.5*(n.x+i.x),.5*(n.y+i.y)),l=new x(.5*(a.x+h.x),.5*(a.y+h.y));return[[t,o,a,l],[l,h,i,r]]},o=t=&gt;{let e=t[0].distSquared(t[1]),s=t[2].distSquared(t[3]),r=.25*t[0].distSquared(t[2]),n=.25*t[1].distSquared(t[3]),o=e&gt;s?e:s,i=r&gt;n?r:n;return 18*(o&gt;i?o:i)},i=(t,e)=&gt;Math.sqrt(t.distSquared(e)),a=(t,e)=&gt;t.scale(2/3).add(e.scale(1/3)),h=t=&gt;{let e,s,r,n,o,i,a,h=new g;return t.match(/(\w+\(\s*[^)]+\))+/g).forEach(t=&gt;{let l=t.match(/[\w.-]+/g),d=l.shift();switch(d){case&quot;translate&quot;:2===l.length?e=new g(1,0,0,1,l[0],l[1]):(console.error(&quot;mesh.js: translate does not have 2 arguments!&quot;),e=new g(1,0,0,1,0,0)),h=h.append(e);break;case&quot;scale&quot;:1===l.length?s=new g(l[0],0,0,l[0],0,0):2===l.length?s=new g(l[0],0,0,l[1],0,0):(console.error(&quot;mesh.js: scale does not have 1 or 2 arguments!&quot;),s=new g(1,0,0,1,0,0)),h=h.append(s);break;case&quot;rotate&quot;:if(3===l.length&amp;&amp;(e=new g(1,0,0,1,l[1],l[2]),h=h.append(e)),l[0]){r=l[0]*Math.PI/180;let t=Math.cos(r),e=Math.sin(r);Math.abs(t)&lt;1e-16&amp;&amp;(t=0),Math.abs(e)&lt;1e-16&amp;&amp;(e=0),a=new g(t,e,-e,t,0,0),h=h.append(a)}else console.error(&quot;math.js: No argument to rotate transform!&quot;);3===l.length&amp;&amp;(e=new g(1,0,0,1,-l[1],-l[2]),h=h.append(e));break;case&quot;skewX&quot;:l[0]?(r=l[0]*Math.PI/180,n=Math.tan(r),o=new g(1,0,n,1,0,0),h=h.append(o)):console.error(&quot;math.js: No argument to skewX transform!&quot;);break;case&quot;skewY&quot;:l[0]?(r=l[0]*Math.PI/180,n=Math.tan(r),i=new g(1,n,0,1,0,0),h=h.append(i)):console.error(&quot;math.js: No argument to skewY transform!&quot;);break;case&quot;matrix&quot;:6===l.length?h=h.append(new g(...l)):console.error(&quot;math.js: Incorrect number of arguments for matrix!&quot;);break;default:console.error(&quot;mesh.js: Unhandled transform type: &quot;+d)}}),h},l=t=&gt;{let e=[],s=t.split(/[ ,]+/);for(let t=0,r=s.length-1;t&lt;r;t+=2)e.push(new x(parseFloat(s[t]),parseFloat(s[t+1])));return e},d=(t,e)=&gt;{for(let s in e)t.setAttribute(s,e[s])},c=(t,e,s,r,n)=&gt;{let o,i,a=[0,0,0,0];for(let h=0;h&lt;3;++h)e[h]&lt;t[h]&amp;&amp;e[h]&lt;s[h]||t[h]&lt;e[h]&amp;&amp;s[h]&lt;e[h]?a[h]=0:(a[h]=.5*((e[h]-t[h])/r+(s[h]-e[h])/n),o=Math.abs(3*(e[h]-t[h])/r),i=Math.abs(3*(s[h]-e[h])/n),a[h]&gt;o?a[h]=o:a[h]&gt;i&amp;&amp;(a[h]=i));return a},u=[[1,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0],[0,0,0,0,1,0,0,0,0,0,0,0,0,0,0,0],[-3,3,0,0,-2,-1,0,0,0,0,0,0,0,0,0,0],[2,-2,0,0,1,1,0,0,0,0,0,0,0,0,0,0],[0,0,0,0,0,0,0,0,1,0,0,0,0,0,0,0],[0,0,0,0,0,0,0,0,0,0,0,0,1,0,0,0],[0,0,0,0,0,0,0,0,-3,3,0,0,-2,-1,0,0],[0,0,0,0,0,0,0,0,2,-2,0,0,1,1,0,0],[-3,0,3,0,0,0,0,0,-2,0,-1,0,0,0,0,0],[0,0,0,0,-3,0,3,0,0,0,0,0,-2,0,-1,0],[9,-9,-9,9,6,3,-6,-3,6,-6,3,-3,4,2,2,1],[-6,6,6,-6,-3,-3,3,3,-4,4,-2,2,-2,-2,-1,-1],[2,0,-2,0,0,0,0,0,1,0,1,0,0,0,0,0],[0,0,0,0,2,0,-2,0,0,0,0,0,1,0,1,0],[-6,6,6,-6,-4,-2,4,2,-3,3,-3,3,-2,-1,-2,-1],[4,-4,-4,4,2,2,-2,-2,2,-2,2,-2,1,1,1,1]],f=t=&gt;{let e=[];for(let s=0;s&lt;16;++s){e[s]=0;for(let r=0;r&lt;16;++r)e[s]+=u[s][r]*t[r]}return e},p=(t,e,s)=&gt;{const r=e*e,n=s*s,o=e*e*e,i=s*s*s;return t[0]+t[1]*e+t[2]*r+t[3]*o+t[4]*s+t[5]*s*e+t[6]*s*r+t[7]*s*o+t[8]*n+t[9]*n*e+t[10]*n*r+t[11]*n*o+t[12]*i+t[13]*i*e+t[14]*i*r+t[15]*i*o},y=t=&gt;{let e=[],s=[],r=[];for(let s=0;s&lt;4;++s)e[s]=[],e[s][0]=n(t[0][s],t[1][s],t[2][s],t[3][s]),e[s][1]=[],e[s][1].push(...n(...e[s][0][0])),e[s][1].push(...n(...e[s][0][1])),e[s][2]=[],e[s][2].push(...n(...e[s][1][0])),e[s][2].push(...n(...e[s][1][1])),e[s][2].push(...n(...e[s][1][2])),e[s][2].push(...n(...e[s][1][3]));for(let t=0;t&lt;8;++t){s[t]=[];for(let r=0;r&lt;4;++r)s[t][r]=[],s[t][r][0]=n(e[0][2][t][r],e[1][2][t][r],e[2][2][t][r],e[3][2][t][r]),s[t][r][1]=[],s[t][r][1].push(...n(...s[t][r][0][0])),s[t][r][1].push(...n(...s[t][r][0][1])),s[t][r][2]=[],s[t][r][2].push(...n(...s[t][r][1][0])),s[t][r][2].push(...n(...s[t][r][1][1])),s[t][r][2].push(...n(...s[t][r][1][2])),s[t][r][2].push(...n(...s[t][r][1][3]))}for(let t=0;t&lt;8;++t){r[t]=[];for(let e=0;e&lt;8;++e)r[t][e]=[],r[t][e][0]=s[t][0][2][e],r[t][e][1]=s[t][1][2][e],r[t][e][2]=s[t][2][2][e],r[t][e][3]=s[t][3][2][e]}return r};class x{constructor(t,e){this.x=t||0,this.y=e||0}toString(){return`(x=${this.x}, y=${this.y})`}clone(){return new x(this.x,this.y)}add(t){return new x(this.x+t.x,this.y+t.y)}scale(t){return void 0===t.x?new x(this.x*t,this.y*t):new x(this.x*t.x,this.y*t.y)}distSquared(t){let e=this.x-t.x,s=this.y-t.y;return e*e+s*s}transform(t){let e=this.x*t.a+this.y*t.c+t.e,s=this.x*t.b+this.y*t.d+t.f;return new x(e,s)}}class g{constructor(t,e,s,r,n,o){void 0===t?(this.a=1,this.b=0,this.c=0,this.d=1,this.e=0,this.f=0):(this.a=t,this.b=e,this.c=s,this.d=r,this.e=n,this.f=o)}toString(){return`affine: ${this.a} ${this.c} ${this.e} \n       ${this.b} ${this.d} ${this.f}`}append(t){t instanceof g||console.error(&quot;mesh.js: argument to Affine.append is not affine!&quot;);let e=this.a*t.a+this.c*t.b,s=this.b*t.a+this.d*t.b,r=this.a*t.c+this.c*t.d,n=this.b*t.c+this.d*t.d,o=this.a*t.e+this.c*t.f+this.e,i=this.b*t.e+this.d*t.f+this.f;return new g(e,s,r,n,o,i)}}class w{constructor(t,e){this.nodes=t,this.colors=e}paintCurve(t,e){if(o(this.nodes)&gt;r){const s=n(...this.nodes);let r=[[],[]],o=[[],[]];for(let t=0;t&lt;4;++t)r[0][t]=this.colors[0][t],r[1][t]=(this.colors[0][t]+this.colors[1][t])/2,o[0][t]=r[1][t],o[1][t]=this.colors[1][t];let i=new w(s[0],r),a=new w(s[1],o);i.paintCurve(t,e),a.paintCurve(t,e)}else{let s=Math.round(this.nodes[0].x);if(s&gt;=0&amp;&amp;s&lt;e){let r=4*(~~this.nodes[0].y*e+s);t[r]=Math.round(this.colors[0][0]),t[r+1]=Math.round(this.colors[0][1]),t[r+2]=Math.round(this.colors[0][2]),t[r+3]=Math.round(this.colors[0][3])}}}}class m{constructor(t,e){this.nodes=t,this.colors=e}split(){let t=[[],[],[],[]],e=[[],[],[],[]],s=[[[],[]],[[],[]]],r=[[[],[]],[[],[]]];for(let s=0;s&lt;4;++s){const r=n(this.nodes[0][s],this.nodes[1][s],this.nodes[2][s],this.nodes[3][s]);t[0][s]=r[0][0],t[1][s]=r[0][1],t[2][s]=r[0][2],t[3][s]=r[0][3],e[0][s]=r[1][0],e[1][s]=r[1][1],e[2][s]=r[1][2],e[3][s]=r[1][3]}for(let t=0;t&lt;4;++t)s[0][0][t]=this.colors[0][0][t],s[0][1][t]=this.colors[0][1][t],s[1][0][t]=(this.colors[0][0][t]+this.colors[1][0][t])/2,s[1][1][t]=(this.colors[0][1][t]+this.colors[1][1][t])/2,r[0][0][t]=s[1][0][t],r[0][1][t]=s[1][1][t],r[1][0][t]=this.colors[1][0][t],r[1][1][t]=this.colors[1][1][t];return[new m(t,s),new m(e,r)]}paint(t,e){let s,n=!1;for(let t=0;t&lt;4;++t)if((s=o([this.nodes[0][t],this.nodes[1][t],this.nodes[2][t],this.nodes[3][t]]))&gt;r){n=!0;break}if(n){let s=this.split();s[0].paint(t,e),s[1].paint(t,e)}else{new w([...this.nodes[0]],[...this.colors[0]]).paintCurve(t,e)}}}class b{constructor(t){this.readMesh(t),this.type=t.getAttribute(&quot;type&quot;)||&quot;bilinear&quot;}readMesh(t){let e=[[]],s=[[]],r=Number(t.getAttribute(&quot;x&quot;)),n=Number(t.getAttribute(&quot;y&quot;));e[0][0]=new x(r,n);let o=t.children;for(let t=0,r=o.length;t&lt;r;++t){e[3*t+1]=[],e[3*t+2]=[],e[3*t+3]=[],s[t+1]=[];let r=o[t].children;for(let n=0,o=r.length;n&lt;o;++n){let o=r[n].children;for(let r=0,i=o.length;r&lt;i;++r){let i=r;0!==t&amp;&amp;++i;let h,d=o[r].getAttribute(&quot;path&quot;),c=&quot;l&quot;;null!=d&amp;&amp;(c=(h=d.match(/\s*([lLcC])\s*(.*)/))[1]);let u=l(h[2]);switch(c){case&quot;l&quot;:0===i?(e[3*t][3*n+3]=u[0].add(e[3*t][3*n]),e[3*t][3*n+1]=a(e[3*t][3*n],e[3*t][3*n+3]),e[3*t][3*n+2]=a(e[3*t][3*n+3],e[3*t][3*n])):1===i?(e[3*t+3][3*n+3]=u[0].add(e[3*t][3*n+3]),e[3*t+1][3*n+3]=a(e[3*t][3*n+3],e[3*t+3][3*n+3]),e[3*t+2][3*n+3]=a(e[3*t+3][3*n+3],e[3*t][3*n+3])):2===i?(0===n&amp;&amp;(e[3*t+3][3*n+0]=u[0].add(e[3*t+3][3*n+3])),e[3*t+3][3*n+1]=a(e[3*t+3][3*n],e[3*t+3][3*n+3]),e[3*t+3][3*n+2]=a(e[3*t+3][3*n+3],e[3*t+3][3*n])):(e[3*t+1][3*n]=a(e[3*t][3*n],e[3*t+3][3*n]),e[3*t+2][3*n]=a(e[3*t+3][3*n],e[3*t][3*n]));break;case&quot;L&quot;:0===i?(e[3*t][3*n+3]=u[0],e[3*t][3*n+1]=a(e[3*t][3*n],e[3*t][3*n+3]),e[3*t][3*n+2]=a(e[3*t][3*n+3],e[3*t][3*n])):1===i?(e[3*t+3][3*n+3]=u[0],e[3*t+1][3*n+3]=a(e[3*t][3*n+3],e[3*t+3][3*n+3]),e[3*t+2][3*n+3]=a(e[3*t+3][3*n+3],e[3*t][3*n+3])):2===i?(0===n&amp;&amp;(e[3*t+3][3*n+0]=u[0]),e[3*t+3][3*n+1]=a(e[3*t+3][3*n],e[3*t+3][3*n+3]),e[3*t+3][3*n+2]=a(e[3*t+3][3*n+3],e[3*t+3][3*n])):(e[3*t+1][3*n]=a(e[3*t][3*n],e[3*t+3][3*n]),e[3*t+2][3*n]=a(e[3*t+3][3*n],e[3*t][3*n]));break;case&quot;c&quot;:0===i?(e[3*t][3*n+1]=u[0].add(e[3*t][3*n]),e[3*t][3*n+2]=u[1].add(e[3*t][3*n]),e[3*t][3*n+3]=u[2].add(e[3*t][3*n])):1===i?(e[3*t+1][3*n+3]=u[0].add(e[3*t][3*n+3]),e[3*t+2][3*n+3]=u[1].add(e[3*t][3*n+3]),e[3*t+3][3*n+3]=u[2].add(e[3*t][3*n+3])):2===i?(e[3*t+3][3*n+2]=u[0].add(e[3*t+3][3*n+3]),e[3*t+3][3*n+1]=u[1].add(e[3*t+3][3*n+3]),0===n&amp;&amp;(e[3*t+3][3*n+0]=u[2].add(e[3*t+3][3*n+3]))):(e[3*t+2][3*n]=u[0].add(e[3*t+3][3*n]),e[3*t+1][3*n]=u[1].add(e[3*t+3][3*n]));break;case&quot;C&quot;:0===i?(e[3*t][3*n+1]=u[0],e[3*t][3*n+2]=u[1],e[3*t][3*n+3]=u[2]):1===i?(e[3*t+1][3*n+3]=u[0],e[3*t+2][3*n+3]=u[1],e[3*t+3][3*n+3]=u[2]):2===i?(e[3*t+3][3*n+2]=u[0],e[3*t+3][3*n+1]=u[1],0===n&amp;&amp;(e[3*t+3][3*n+0]=u[2])):(e[3*t+2][3*n]=u[0],e[3*t+1][3*n]=u[1]);break;default:console.error(&quot;mesh.js: &quot;+c+&quot; invalid path type.&quot;)}if(0===t&amp;&amp;0===n||r&gt;0){let e=window.getComputedStyle(o[r]).stopColor.match(/^rgb\s*\(\s*(\d+)\s*,\s*(\d+)\s*,\s*(\d+)\s*\)$/i),a=window.getComputedStyle(o[r]).stopOpacity,h=255;a&amp;&amp;(h=Math.floor(255*a)),e&amp;&amp;(0===i?(s[t][n]=[],s[t][n][0]=Math.floor(e[1]),s[t][n][1]=Math.floor(e[2]),s[t][n][2]=Math.floor(e[3]),s[t][n][3]=h):1===i?(s[t][n+1]=[],s[t][n+1][0]=Math.floor(e[1]),s[t][n+1][1]=Math.floor(e[2]),s[t][n+1][2]=Math.floor(e[3]),s[t][n+1][3]=h):2===i?(s[t+1][n+1]=[],s[t+1][n+1][0]=Math.floor(e[1]),s[t+1][n+1][1]=Math.floor(e[2]),s[t+1][n+1][2]=Math.floor(e[3]),s[t+1][n+1][3]=h):3===i&amp;&amp;(s[t+1][n]=[],s[t+1][n][0]=Math.floor(e[1]),s[t+1][n][1]=Math.floor(e[2]),s[t+1][n][2]=Math.floor(e[3]),s[t+1][n][3]=h))}}e[3*t+1][3*n+1]=new x,e[3*t+1][3*n+2]=new x,e[3*t+2][3*n+1]=new x,e[3*t+2][3*n+2]=new x,e[3*t+1][3*n+1].x=(-4*e[3*t][3*n].x+6*(e[3*t][3*n+1].x+e[3*t+1][3*n].x)+-2*(e[3*t][3*n+3].x+e[3*t+3][3*n].x)+3*(e[3*t+3][3*n+1].x+e[3*t+1][3*n+3].x)+-1*e[3*t+3][3*n+3].x)/9,e[3*t+1][3*n+2].x=(-4*e[3*t][3*n+3].x+6*(e[3*t][3*n+2].x+e[3*t+1][3*n+3].x)+-2*(e[3*t][3*n].x+e[3*t+3][3*n+3].x)+3*(e[3*t+3][3*n+2].x+e[3*t+1][3*n].x)+-1*e[3*t+3][3*n].x)/9,e[3*t+2][3*n+1].x=(-4*e[3*t+3][3*n].x+6*(e[3*t+3][3*n+1].x+e[3*t+2][3*n].x)+-2*(e[3*t+3][3*n+3].x+e[3*t][3*n].x)+3*(e[3*t][3*n+1].x+e[3*t+2][3*n+3].x)+-1*e[3*t][3*n+3].x)/9,e[3*t+2][3*n+2].x=(-4*e[3*t+3][3*n+3].x+6*(e[3*t+3][3*n+2].x+e[3*t+2][3*n+3].x)+-2*(e[3*t+3][3*n].x+e[3*t][3*n+3].x)+3*(e[3*t][3*n+2].x+e[3*t+2][3*n].x)+-1*e[3*t][3*n].x)/9,e[3*t+1][3*n+1].y=(-4*e[3*t][3*n].y+6*(e[3*t][3*n+1].y+e[3*t+1][3*n].y)+-2*(e[3*t][3*n+3].y+e[3*t+3][3*n].y)+3*(e[3*t+3][3*n+1].y+e[3*t+1][3*n+3].y)+-1*e[3*t+3][3*n+3].y)/9,e[3*t+1][3*n+2].y=(-4*e[3*t][3*n+3].y+6*(e[3*t][3*n+2].y+e[3*t+1][3*n+3].y)+-2*(e[3*t][3*n].y+e[3*t+3][3*n+3].y)+3*(e[3*t+3][3*n+2].y+e[3*t+1][3*n].y)+-1*e[3*t+3][3*n].y)/9,e[3*t+2][3*n+1].y=(-4*e[3*t+3][3*n].y+6*(e[3*t+3][3*n+1].y+e[3*t+2][3*n].y)+-2*(e[3*t+3][3*n+3].y+e[3*t][3*n].y)+3*(e[3*t][3*n+1].y+e[3*t+2][3*n+3].y)+-1*e[3*t][3*n+3].y)/9,e[3*t+2][3*n+2].y=(-4*e[3*t+3][3*n+3].y+6*(e[3*t+3][3*n+2].y+e[3*t+2][3*n+3].y)+-2*(e[3*t+3][3*n].y+e[3*t][3*n+3].y)+3*(e[3*t][3*n+2].y+e[3*t+2][3*n].y)+-1*e[3*t][3*n].y)/9}}this.nodes=e,this.colors=s}paintMesh(t,e){let s=(this.nodes.length-1)/3,r=(this.nodes[0].length-1)/3;if(&quot;bilinear&quot;===this.type||s&lt;2||r&lt;2){let n;for(let o=0;o&lt;s;++o)for(let s=0;s&lt;r;++s){let r=[];for(let t=3*o,e=3*o+4;t&lt;e;++t)r.push(this.nodes[t].slice(3*s,3*s+4));let i=[];i.push(this.colors[o].slice(s,s+2)),i.push(this.colors[o+1].slice(s,s+2)),(n=new m(r,i)).paint(t,e)}}else{let n,o,a,h,l,d,u;const x=s,g=r;s++,r++;let w=new Array(s);for(let t=0;t&lt;s;++t){w[t]=new Array(r);for(let e=0;e&lt;r;++e)w[t][e]=[],w[t][e][0]=this.nodes[3*t][3*e],w[t][e][1]=this.colors[t][e]}for(let t=0;t&lt;s;++t)for(let e=0;e&lt;r;++e)0!==t&amp;&amp;t!==x&amp;&amp;(n=i(w[t-1][e][0],w[t][e][0]),o=i(w[t+1][e][0],w[t][e][0]),w[t][e][2]=c(w[t-1][e][1],w[t][e][1],w[t+1][e][1],n,o)),0!==e&amp;&amp;e!==g&amp;&amp;(n=i(w[t][e-1][0],w[t][e][0]),o=i(w[t][e+1][0],w[t][e][0]),w[t][e][3]=c(w[t][e-1][1],w[t][e][1],w[t][e+1][1],n,o));for(let t=0;t&lt;r;++t){w[0][t][2]=[],w[x][t][2]=[];for(let e=0;e&lt;4;++e)n=i(w[1][t][0],w[0][t][0]),o=i(w[x][t][0],w[x-1][t][0]),w[0][t][2][e]=n&gt;0?2*(w[1][t][1][e]-w[0][t][1][e])/n-w[1][t][2][e]:0,w[x][t][2][e]=o&gt;0?2*(w[x][t][1][e]-w[x-1][t][1][e])/o-w[x-1][t][2][e]:0}for(let t=0;t&lt;s;++t){w[t][0][3]=[],w[t][g][3]=[];for(let e=0;e&lt;4;++e)n=i(w[t][1][0],w[t][0][0]),o=i(w[t][g][0],w[t][g-1][0]),w[t][0][3][e]=n&gt;0?2*(w[t][1][1][e]-w[t][0][1][e])/n-w[t][1][3][e]:0,w[t][g][3][e]=o&gt;0?2*(w[t][g][1][e]-w[t][g-1][1][e])/o-w[t][g-1][3][e]:0}for(let s=0;s&lt;x;++s)for(let r=0;r&lt;g;++r){let n=i(w[s][r][0],w[s+1][r][0]),o=i(w[s][r+1][0],w[s+1][r+1][0]),c=i(w[s][r][0],w[s][r+1][0]),x=i(w[s+1][r][0],w[s+1][r+1][0]),g=[[],[],[],[]];for(let t=0;t&lt;4;++t){(d=[])[0]=w[s][r][1][t],d[1]=w[s+1][r][1][t],d[2]=w[s][r+1][1][t],d[3]=w[s+1][r+1][1][t],d[4]=w[s][r][2][t]*n,d[5]=w[s+1][r][2][t]*n,d[6]=w[s][r+1][2][t]*o,d[7]=w[s+1][r+1][2][t]*o,d[8]=w[s][r][3][t]*c,d[9]=w[s+1][r][3][t]*x,d[10]=w[s][r+1][3][t]*c,d[11]=w[s+1][r+1][3][t]*x,d[12]=0,d[13]=0,d[14]=0,d[15]=0,u=f(d);for(let e=0;e&lt;9;++e){g[t][e]=[];for(let s=0;s&lt;9;++s)g[t][e][s]=p(u,e/8,s/8),g[t][e][s]&gt;255?g[t][e][s]=255:g[t][e][s]&lt;0&amp;&amp;(g[t][e][s]=0)}}h=[];for(let t=3*s,e=3*s+4;t&lt;e;++t)h.push(this.nodes[t].slice(3*r,3*r+4));l=y(h);for(let s=0;s&lt;8;++s)for(let r=0;r&lt;8;++r)(a=new m(l[s][r],[[[g[0][s][r],g[1][s][r],g[2][s][r],g[3][s][r]],[g[0][s][r+1],g[1][s][r+1],g[2][s][r+1],g[3][s][r+1]]],[[g[0][s+1][r],g[1][s+1][r],g[2][s+1][r],g[3][s+1][r]],[g[0][s+1][r+1],g[1][s+1][r+1],g[2][s+1][r+1],g[3][s+1][r+1]]]])).paint(t,e)}}}transform(t){if(t instanceof x)for(let e=0,s=this.nodes.length;e&lt;s;++e)for(let s=0,r=this.nodes[0].length;s&lt;r;++s)this.nodes[e][s]=this.nodes[e][s].add(t);else if(t instanceof g)for(let e=0,s=this.nodes.length;e&lt;s;++e)for(let s=0,r=this.nodes[0].length;s&lt;r;++s)this.nodes[e][s]=this.nodes[e][s].transform(t)}scale(t){for(let e=0,s=this.nodes.length;e&lt;s;++e)for(let s=0,r=this.nodes[0].length;s&lt;r;++s)this.nodes[e][s]=this.nodes[e][s].scale(t)}}document.querySelectorAll(&quot;rect,circle,ellipse,path,text&quot;).forEach((r,n)=&gt;{let o=r.getAttribute(&quot;id&quot;);o||(o=&quot;patchjs_shape&quot;+n,r.setAttribute(&quot;id&quot;,o));const i=r.style.fill.match(/^url\(\s*&quot;?\s*#([^\s&quot;]+)&quot;?\s*\)/),a=r.style.stroke.match(/^url\(\s*&quot;?\s*#([^\s&quot;]+)&quot;?\s*\)/);if(i&amp;&amp;i[1]){const a=document.getElementById(i[1]);if(a&amp;&amp;&quot;meshgradient&quot;===a.nodeName){const i=r.getBBox();let l=document.createElementNS(s,&quot;canvas&quot;);d(l,{width:i.width,height:i.height});const c=l.getContext(&quot;2d&quot;);let u=c.createImageData(i.width,i.height);const f=new b(a);&quot;objectBoundingBox&quot;===a.getAttribute(&quot;gradientUnits&quot;)&amp;&amp;f.scale(new x(i.width,i.height));const p=a.getAttribute(&quot;gradientTransform&quot;);null!=p&amp;&amp;f.transform(h(p)),&quot;userSpaceOnUse&quot;===a.getAttribute(&quot;gradientUnits&quot;)&amp;&amp;f.transform(new x(-i.x,-i.y)),f.paintMesh(u.data,l.width),c.putImageData(u,0,0);const y=document.createElementNS(t,&quot;image&quot;);d(y,{width:i.width,height:i.height,x:i.x,y:i.y});let g=l.toDataURL();y.setAttributeNS(e,&quot;xlink:href&quot;,g),r.parentNode.insertBefore(y,r),r.style.fill=&quot;none&quot;;const w=document.createElementNS(t,&quot;use&quot;);w.setAttributeNS(e,&quot;xlink:href&quot;,&quot;#&quot;+o);const m=&quot;patchjs_clip&quot;+n,M=document.createElementNS(t,&quot;clipPath&quot;);M.setAttribute(&quot;id&quot;,m),M.appendChild(w),r.parentElement.insertBefore(M,r),y.setAttribute(&quot;clip-path&quot;,&quot;url(#&quot;+m+&quot;)&quot;),u=null,l=null,g=null}}if(a&amp;&amp;a[1]){const o=document.getElementById(a[1]);if(o&amp;&amp;&quot;meshgradient&quot;===o.nodeName){const i=parseFloat(r.style.strokeWidth.slice(0,-2))*(parseFloat(r.style.strokeMiterlimit)||parseFloat(r.getAttribute(&quot;stroke-miterlimit&quot;))||1),a=r.getBBox(),l=Math.trunc(a.width+i),c=Math.trunc(a.height+i),u=Math.trunc(a.x-i/2),f=Math.trunc(a.y-i/2);let p=document.createElementNS(s,&quot;canvas&quot;);d(p,{width:l,height:c});const y=p.getContext(&quot;2d&quot;);let g=y.createImageData(l,c);const w=new b(o);&quot;objectBoundingBox&quot;===o.getAttribute(&quot;gradientUnits&quot;)&amp;&amp;w.scale(new x(l,c));const m=o.getAttribute(&quot;gradientTransform&quot;);null!=m&amp;&amp;w.transform(h(m)),&quot;userSpaceOnUse&quot;===o.getAttribute(&quot;gradientUnits&quot;)&amp;&amp;w.transform(new x(-u,-f)),w.paintMesh(g.data,p.width),y.putImageData(g,0,0);const M=document.createElementNS(t,&quot;image&quot;);d(M,{width:l,height:c,x:0,y:0});let S=p.toDataURL();M.setAttributeNS(e,&quot;xlink:href&quot;,S);const k=&quot;pattern_clip&quot;+n,A=document.createElementNS(t,&quot;pattern&quot;);d(A,{id:k,patternUnits:&quot;userSpaceOnUse&quot;,width:l,height:c,x:u,y:f}),A.appendChild(M),o.parentNode.appendChild(A),r.style.stroke=&quot;url(#&quot;+k+&quot;)&quot;,g=null,p=null,S=null}}})}();
</script><g
     id="g91502"
     transform="translate(-3671.366,-3826.9331)"><g
       id="g91481"
       transform="translate(3352.7999,440.26654)"><path
         id="path91413"
         style="fill:#e51717;fill-opacity:1;stroke:none;stroke-width:0.264583;stroke-linecap:round;stroke-linejoin:round;stroke-dashoffset:8;stroke-opacity:1"
         d="m 474.13332,3386.6666 a 135.46666,135.46666 0 0 0 -67.78346,18.1839 135.46666,135.46666 0 0 1 67.78346,117.2828 135.46666,135.46666 0 0 1 117.28276,67.7829 135.46666,135.46666 0 0 0 18.18391,-67.7829 135.46666,135.46666 0 0 0 -15.66468,-63.1714 c -0.64144,0.082 -1.2879,0.1385 -1.94148,0.1385 h -4.67827 v 3.9295 c 3.07181,1.0041 5.29166,3.8942 5.29166,7.2988 0,4.2376 -3.43946,7.6775 -7.67808,7.6775 -1.08479,0 -2.119,-0.2261 -3.05563,-0.6335 l -15.17685,15.1773 c 0.21695,0.7106 0.33332,1.4646 0.33332,2.2459 0,4.2373 -3.43948,7.6776 -7.67809,7.6776 -3.1115,0 -5.79152,-1.8549 -6.99802,-4.5181 h -31.26838 l -0.10852,0.032 c -3.42896,0.9184 -18.85928,5.0536 -26.57977,7.1221 -0.22754,0.061 -0.46073,0.091 -0.69091,0.09 -0.67469,0 -1.33607,-0.2625 -1.83348,-0.7441 l -0.0315,-0.031 c -0.5556,-0.5575 -0.83095,-1.3279 -0.76481,-2.0981 0.0132,-0.1532 0.0399,-0.3063 0.0796,-0.4579 2.06901,-7.7197 6.20445,-23.1513 7.12256,-26.5787 l 0.0661,-0.2108 0.0476,-0.1215 0.0661,-0.1488 v -30.1387 c -2.73843,-1.1729 -4.65966,-3.8945 -4.65966,-7.0616 0,-4.2373 3.43953,-7.6776 7.6755,-7.6776 0.66939,0 1.31518,0.085 1.93166,0.2455 l 15.73754,-15.737 c -0.381,-0.9105 -0.59014,-1.9108 -0.59014,-2.9596 0,-4.2373 3.43953,-7.6775 7.6755,-7.6775 1.20385,0 2.34148,0.2771 3.35483,0.7705 l 4.09174,-4.0918 a 135.46666,135.46666 0 0 0 -59.5421,-13.8141 z m 64.23536,16.2295 -5.23173,5.2312 c 0.15345,0.3127 0.28318,0.6371 0.3943,0.9715 h 15.22232 a 135.46666,135.46666 0 0 0 -10.38489,-6.2027 z m -12.13983,5.1397 c -1.8997,0 -3.44217,1.5433 -3.44217,3.4443 0,1.901 1.54247,3.4447 3.44217,3.4447 1.90235,0 3.44475,-1.5437 3.44475,-3.4447 0,-1.901 -1.5424,-3.4443 -3.44475,-3.4443 z m -129.99826,3.2717 a 135.46666,135.46666 0 0 0 -58.02954,110.5229 135.46666,135.46666 0 0 0 18.14928,67.7334 135.46666,135.46666 0 0 1 30.11444,-35.9136 93.133331,93.133331 0 0 1 -5.93038,-31.8203 93.133331,93.133331 0 0 1 51.18498,-82.6725 124.88333,124.88333 0 0 0 -35.48878,-27.8499 z m 137.20815,2.8184 c -1.07947,2.9356 -3.89996,5.0322 -7.20989,5.0322 -1.35202,0 -2.62463,-0.3512 -3.72794,-0.9663 l -14.85387,14.8534 c 0.42863,0.577 0.77798,1.2169 1.03198,1.9022 h 21.38112 c 2.94745,0 5.77301,-1.1708 7.85792,-3.2546 l 15.54685,-15.5469 c -0.46566,-0.608 -0.84376,-1.2882 -1.11363,-2.02 z m 23.47092,4.5615 -15.99644,15.9985 c -2.87863,2.8781 -6.78115,4.4948 -10.85308,4.4948 h -21.069 c -0.59002,2.8289 -2.7381,5.0888 -5.5056,5.8389 v 21.4307 c 0,0.921 0.15583,1.8261 0.45216,2.6805 l 21.98419,-21.9857 c 0.0794,-0.079 0.16125,-0.1517 0.24856,-0.2186 0.72496,-0.5649 1.70399,-0.7159 2.57711,-0.3783 0.97631,0.3779 1.638,1.2965 1.68827,2.343 0.21431,4.5217 0.49708,10.494 0.65319,13.7687 0.008,0.1987 0.0397,0.3921 0.0899,0.5767 0.0953,0.3411 0.25446,0.6545 0.46613,0.9255 l 0.0475,0.057 c 0.0609,0.076 0.12958,0.1487 0.20102,0.2175 l 0.12402,0.1127 c 0.0476,0.042 0.098,0.082 0.1509,0.1204 0.40746,0.2976 0.90214,0.482 1.4366,0.5074 3.27553,0.1553 9.24744,0.4384 13.77177,0.6527 1.0451,0.05 1.96311,0.712 2.34146,1.6888 0.0159,0.044 0.0317,0.088 0.0475,0.1313 0.0556,0.1749 0.0951,0.3534 0.11369,0.5322 0.0873,0.7866 -0.18234,1.5854 -0.75913,2.1616 l -22.05291,22.055 c 0.91545,0.3466 1.89686,0.5292 2.89698,0.5292 h 21.93923 c 0.64823,-2.5874 2.61148,-4.6561 5.1356,-5.4544 v -19.1705 c 0,-2.5305 0.62451,-4.9969 1.78852,-7.1923 -0.76199,-1.1922 -1.20354,-2.6082 -1.20354,-4.1269 0,-4.2376 3.4395,-7.6775 7.67808,-7.6775 1.11919,0 2.18304,0.24 3.14348,0.6718 l 9.56169,-9.5612 c -0.49477,-1.0136 -0.76998,-2.151 -0.76998,-3.3528 0,-0.8084 0.13801,-1.5824 0.37,-2.3146 a 135.46666,135.46666 0 0 0 -15.87913,-15.9132 c -0.68837,0.2031 -1.41276,0.3219 -2.16731,0.3219 -0.93133,0 -1.82338,-0.1662 -2.65152,-0.4707 z m -55.43537,15.4771 c -1.89971,0 -3.44217,1.5432 -3.44217,3.4442 0,1.9011 1.54246,3.4442 3.44217,3.4442 1.90235,0 3.44527,-1.5431 3.44527,-3.4442 0,-1.901 -1.54292,-3.4442 -3.44527,-3.4442 z m 80.08658,9.8071 -9.45317,9.4553 c 0.23813,0.4551 0.43119,0.9372 0.57671,1.4402 h 9.60407 v -10.5875 c -0.24871,-0.09 -0.49214,-0.1935 -0.72761,-0.308 z m 5.75469,3.7708 v 7.1247 h 4.37803 a 135.46666,135.46666 0 0 0 -4.37803,-7.1247 z m -22.01313,5.7971 c -1.90235,0 -3.44475,1.5431 -3.44475,3.4442 0,1.9007 1.5424,3.4443 3.44475,3.4443 1.89971,0 3.44475,-1.5436 3.44475,-3.4443 0,-1.9011 -1.54504,-3.4442 -3.44475,-3.4442 z m 7.38198,5.5609 c -0.92074,3.2091 -3.8789,5.5609 -7.38198,5.5609 -1.12447,0 -2.19334,-0.242 -3.15639,-0.6775 -0.5715,1.3541 -0.87334,2.8208 -0.87334,4.3191 v 19.0578 c 0.87048,0.2249 1.6853,0.5992 2.40761,1.0945 l 14.48852,-14.4875 c -0.58472,-1.0835 -0.91519,-2.3227 -0.91519,-3.639 0,-3.3091 2.09797,-6.1326 5.03484,-7.2105 v -4.0178 z m 12.24473,7.784 c -1.8997,0 -3.44217,1.5436 -3.44217,3.4443 0,1.901 1.54247,3.4442 3.44217,3.4442 1.90235,0 3.44475,-1.5432 3.44475,-3.4442 0,-1.9007 -1.5424,-3.4443 -3.44475,-3.4443 z m -25.57725,24.4673 c -1.89971,0 -3.44217,1.5431 -3.44217,3.4442 0,1.901 1.54246,3.4448 3.44217,3.4448 1.90235,0 3.44475,-1.5438 3.44475,-3.4448 0,-1.9011 -1.5424,-3.4442 -3.44475,-3.4442 z m -96.81683,42.3793 c -26.29297,2.4114 -51.1453,13.0942 -70.98688,30.5139 -11.33478,10.0809 -20.73833,22.1427 -27.74972,35.5942 -7.4604,14.3649 -12.05696,30.0434 -13.53406,46.1626 16.11928,-1.4768 31.79799,-6.0733 46.16307,-13.5336 13.45139,-7.0115 25.51301,-16.4152 35.59369,-27.7502 17.41969,-19.8416 28.10251,-44.6939 30.5139,-70.9869 z m 94.27073,30.3501 a 93.133331,93.133331 0 0 1 -82.67247,51.185 93.133331,93.133331 0 0 1 -31.81976,-5.9299 135.46666,135.46666 0 0 1 -35.91357,30.1144 135.46666,135.46666 0 0 0 67.73333,18.1493 135.46666,135.46666 0 0 0 110.52297,-58.03 124.88333,124.88333 0 0 0 -27.8505,-35.4888 z" /><path
         d="m 329.28174,3734.5935 q -10.71563,0 -10.71563,-11.9062 v -2.3813 q 0,-11.9062 10.71563,-11.9062 h 10.71562 v -2.3813 q 0,-5.9531 -7.14375,-5.9531 h -13.09687 v -5.9531 h 21.43124 q 10.71563,0 10.71563,11.9062 v 28.575 z m 5.95312,-20.2406 q -4.7625,0 -4.7625,5.9531 v 2.3813 q 0,5.9531 4.7625,5.9531 h 4.7625 v -14.2875 z m 21.96042,-38.1 v -5.9531 h 16.66875 v 64.2937 h -11.90625 v -58.3406 z m 32.67604,17.8594 h 22.62187 v 19.05 29.7656 q 0,11.9062 -10.71562,11.9062 h -21.43125 v -5.9531 h 13.09687 q 7.14375,0 7.14375,-5.9531 v -8.3344 h -10.71562 q -10.71563,0 -10.71563,-11.9062 v -16.6688 q 0,-11.9062 10.71563,-11.9062 z m 5.95312,34.5281 h 4.7625 v -15.4781 -13.0969 h -4.7625 q -4.7625,0 -4.7625,5.9531 v 16.6688 q 0,5.9531 4.7625,5.9531 z m 44.58229,5.9531 h -11.90624 q -10.71563,0 -10.71563,-11.9062 v -16.6688 q 0,-11.9062 10.71563,-11.9062 h 11.90624 q 10.71563,0 10.71563,11.9062 v 16.6688 q 0,11.9062 -10.71563,11.9062 z m -1.19062,-11.9062 v -16.6688 q 0,-5.9531 -4.7625,-5.9531 -4.7625,0 -4.7625,5.9531 v 16.6688 q 0,5.9531 4.7625,5.9531 4.7625,0 4.7625,-5.9531 z m 45.77292,-28.575 v 5.9531 h -9.525 q -7.14375,0 -7.14375,5.9531 v 28.575 h -11.90625 v -28.575 q 0,-11.9062 10.71562,-11.9062 z m 4.87916,0 h 11.90625 v 40.4812 h -11.90625 z m 6.15157,-23.8125 7.54062,7.5406 -7.54062,7.5406 -7.54063,-7.5406 z m 17.79323,5.9531 h 11.90624 v 17.8594 h 16.66875 v 5.9531 h -16.66875 v 22.6219 q 0,5.9531 4.7625,5.9531 h 11.90625 v 5.9531 h -17.85937 q -10.71562,0 -10.71562,-11.9062 v -22.6219 h -4.7625 v -5.9531 h 4.7625 z m 56.48854,17.8594 q 10.71562,0 10.71562,11.9062 v 28.575 H 569.1109 v -28.575 q 0,-5.9531 -7.14375,-5.9531 h -2.38125 v 34.5281 h -11.90625 v -64.2937 h 11.90625 v 23.8125 z m 16.00729,0 h 32.14687 q 10.71563,0 10.71563,11.9062 v 28.575 h -11.90625 v -28.575 q 0,-5.9531 -3.57188,-5.9531 v 34.5281 h -11.90625 v -34.5281 h -3.57187 v 34.5281 h -11.90625 z"
         id="text91399"
         style="font-size:101.6px;line-height:0;font-family:GN-Kin-iro_SansSerif;-inkscape-font-specification:'GN-Kin-iro_SansSerif, Normal';text-align:center;letter-spacing:0.529167px;text-anchor:middle;fill:#e51717;stroke-width:0.132291;stroke-linecap:round;stroke-linejoin:round;stroke-dashoffset:8"
         aria-label="algorithm" /></g></g></svg>
